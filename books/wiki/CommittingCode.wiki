#summary Suggested guidelines for how to commit code.

= Important guidelines =

  * Document what you have changed when you commit.
  * Avoid breaking the build, by CertifyingTheBooks, including the workshop books.
  * Make sure all parens are balanced.  File acl2-sources/emacs/emacs-acl2.el distributed with ACL2 defines a command meta-x find-unbalanced-parentheses for this purpose (you'll probably want to load this file via your ~/.emacs file anyway).
  * Books should target the version of ACL2 corresponding to the branch or trunk to which they are being committed.
  * Either use the standard makefile approach (see :doc book-makefiles) or explain why this would be awkward.  Non-standard makefiles should still cause the string "**CERTIFICATION FAILED**" to be printed whenever a book's certification fails.
  * Be sure to keep Makefile dependencies up to date.
  * If you add a new top-level directory, be sure to record any new directory-level dependencies in books/Makefile.
  * Avoid non-local in-theory events except when there is good reason for them (e.g., modifying the theory for events defined in that book).
  * When using include-book for any book that is not part of your submission, use :dir :system (see :doc include-book).  Do not use absolute pathnames, and only use pathnames relative to the book when including books that are part of the library (e.g., it is good for arithmetic-5/top.lisp to include arithmetic/"lib/basic-ops/top.lisp" using a relative path).
  * Include a copyright and license for each book, either directly or by pointing to a license file.
  * Comment all non-trivial changes with your name.
  * Document your submission

= Documenting the Submission =

  * We highly recommend that you document your library using the XDOC system.  See XDOC topic "xdoc" at [http://fv.centtech.com/acl2/latest/doc/centaur/frames2.html] for more information.

= Integration of Version Control and Issue-tracking =

There are commit-log commands to:

  * Easily set an issue's status to Fixed.
  * Update any aspect of the issue, and add a comment.
  * Enter a new issue.
  * Request a code review.

The issue tracker handles an easy-to-use "short form" syntax to set an issue's status to Fixed. This would be used when the source code change you are committing completely fixes a defect or implements a requested enhancement. The syntax is any one of the following:

|| (Fixes issue NNN) || Enclose command in parentheses ||
|| Fixes issue NNN. || Full sentence in your log message description ||
|| Fixes issue NNN || On a line by itself ||

There is also syntax for flagging a commit as part of fixing an issue.

|| Update issue NNN  || Placed on its own line near the end of the commit message ||
|| any comments that you want to include || Placed below the "Update issue NNN" ||

See 
[https://code.google.com/p/support/wiki/IssueTracker#Integration_with_version_control Google Code Wiki] for more information.