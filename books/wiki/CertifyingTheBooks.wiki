#summary How to certify all the books, for testing or use.

= Creating the "standard" certification environment =

It's probably easiest to:
  # extract the current ACL2 distribution
  # replace its "books" directory with what you've checked out from SVN
  # build yourself an ACL2 image as usual to obtain the `saved_acl2` file

Then, you can just go into the books directory and run:
  * `make` -- to certify everything except the workshop books, or
  * `make all-plus` -- for everything including the workshop books.

You can also use `make -j 2` if you have a dual-core system, `make -j 4` if you have four cores, etc., to instruct it to use more CPUs.


= Using an alternate ACL2 image =

You can use a different ACL2 image by explicitly using `make ACL2=/path/to/my-acl2 ...` when you certify.  *However*, you need to be careful because the other ACL2 image may have its own notion of where its system books are, which could lead you to a bizarre state where `(include-book "foo" :dir :system)` is being taken from your previous distribution instead of your SVN copy.  

An easy way to fix this is to set the ACL2_SYSTEM_BOOKS variable in your `saved_acl2` script.  Your script will look something like this:

{{{ 
#!/bin/sh
# Saved November 5, 2007  23:40:11

exec "/[...]/gcl-saved_acl2.gcl" $*
}}}

And you just need to add the "export" line, e.g.:

{{{ 
#!/bin/sh
# Saved November 5, 2007  23:40:11

export ACL2_SYSTEM_BOOKS=/path/to/my/acl2-books
exec "/[...]/gcl-saved_acl2.gcl" $*
}}}
